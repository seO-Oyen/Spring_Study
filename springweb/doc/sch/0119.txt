# 학습목표
- Spring과 웹 소캣을 이용한 채팅 애플리케이션 구현 방법을 이해합니다.
- 메시지 교환과 실시간 통신 기본 원리를 학습합니다.
- 프론트엔드와 벡엔드 간의 통신 방법을 숙지합니다.

# 주요 핵심 키워드와 개념
- Spring Framework : 자바 기반의 강력한 애플리케이션 개발 프레임워크
- WebSocket : 실시간 양방향 통신을 위한 프로토콜
- STOMP (Simple Text Oriented Messaging Protocol) : 메시징 프로토콜로 WebSocket 위에서 동작
- REST API : 서버와 클라이언트 간 통신을 위한 API 설계 가이드

# 생각하고 토론해볼 내용 
- 실시간 채팅 애플리케이션에서 WebSocket의 역할과 중요성에 대해 논의해보세요.
- REST API와 WebSocket을 결합하여 사용할 때의 장단점은 무엇일까요?
- 대규모 트래픽에서의 채팅 애플리케이션 성능 최적화 전략은 무엇일까요?

# 간단한 퀴즈 
1. WebSocket이 HTTP와 다른 점은 무엇인가요?
2. STOMP 프로토콜의 주요 기능은 무엇인가요?