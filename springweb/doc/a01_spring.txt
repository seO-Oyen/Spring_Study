# 스프링의 내용 계열화
1. 스프링의 기본 개념들
	1) 컨테이너
		기본적인 controller, service, dao
		외부라이버러리/프레임워크사용(파일업로드/다운로드/ajax(json)
			/소켙통신으로 통신 실시간 채팅/메일발송/mybatis DB처리...
		각 객체들간의 연동관계/자동 연동처리(autowire)	
	2) 스프링 MVC(화면보이는 처리)
		모델2형식
	3) DI
	4) AOP
	5) 스프링 처리 구조
2. 스프링 개발 환경 설정
	1) dynamic web ==> spring 설정
	2) spring boot 환경 설정
	
3. 스프링에서 발생하는 에러 유형에 대한 처리 방법
	0) 기본형식 check
		- controller
			@Controller 1) 선언여부
			@RequestMapping("start.do") 2) 동일한지
			public String start(@RequestParam("name") String name,
				                @RequestParam("age") int age,
				                Person p01, Model d
				                3) 요청이름 정확하고, type 맞는지 check
				                	property/매개타입
				d.addAttribute("모델명", 객체/데이터) 5) 모델명 정확한지                	
				return "wabapp/WEB-INF/view/start.jsp"	
								4) 뷰단경로가 동일(경로명/파일명은 가능한한
									복사해서 붙이기-오타방지)
		- dispatcher-servlet.xml
			<bean id="startController" class=""/> 6) 클래스 패키지명으로 등록이 되어 있는지?
				StartController.java
				패키지가 달라지면 같은 controller명으로 선언할 수 있기에
				이 에러가 발생할 수 있다.						                
	1) xml에서 controller 등록이 안 되어 있으면 404 발생
	2) RequestMapping안에 url패턴은 서버에 동일하게 있으면 안된다.
	3) 동일한 url mapping형식
		to {[/deptList88.do]}: There is already 
			'springweb.a01_start.A05_MVC_Controller
	4) 다른 패키지에 동일한 이름의 클래스 만든 경우 에러 발생
		Unexpected exception parseing XML document from ServletContext
		resource [/WEB-INF/dispatcher-servlet.xml]
		bean class conflicts with existing, non-compatible bean
		definition of same and class XXXX
	5) 에러발생시,
		도움을 받을 수 있는데, 에러노트
		에러 내용 : 원인, 결과, 대응방법
	6) 요청값으로 객체 선언시, 404가 날때, 확인할 내용
		person.do : 처리가 된다.(요청값을 아무것도 선언하지 않을 때)
		person.do?name=홍길동
		person.do?age=25
		person.do?loc=서울 
			위와같이 선언 자체를 안하든지, 적절한 type으로 선언하면 
			다른 데이터는 자동 default 객체의 =null, 숫자형은 0으로
		person.do?age=이십오
		person.do?age=        form 
								<input name="age" value=""
									submit 클릭시, 위와 같은 404 100%
			public void setAge(int age)     int age = ""; X										
		@RequestMapping("person.do")
		public String regPerson(Person p01)	
		
			
4. 스프링 DI에 대한 이해
	new Person() ==> 모두 다 객체 생성 컨터이너에 올려놓고 호출하는 방식.
	()  ()  () 객체가 서로 연관관계가 있으면 자동으로 할당되는 (autowiring)
	로 처리되는 개념으로 할당 처리한다.
	1) 스프링 프레임웍의 핵심 객체 개념
	2) 스프링 흐름 구조를 이해할 수 있다.
	3) 제어역전의 개념을 이해할 수 있다.(IoC, Inversion of Control)
	4) 의존성주입(Dependency Injection)
5. 스프링 MVC 웹 개발
	1) 스프링의 controller 처리
	2) 스프링의 요청값 처리
	3) 스프링의 모델 데이터 처리
	4) 스프링의 view단 호출 처리..
6. 스프링 Database Access Object
	1) 스프링에서 주로 사용되는 프레임워크인 MYBATIS FRAMEWORK활용
		xml형식으로 interface만 만들어 주면 자동으로 상속 받은 실제 객체를
		만들어서 사용하게 한다.
		ex) sql이 있는 xml ==> 껍데기 interface ==> 자동으로 상속받는
			실제 dao객체 프레임워크에서 생성 ==> 호출 활용
	2) 데이터 처리 환경 설정	
	3) 데이터 처리를 위한 핵심 개발 패턴
	4) JPA
7. 스프링 AOP
	1) 스프링에서 지원하는 관점지향 프로그램..
		공통적인 설정시 활용될 수 있는 컨테이너형 객체들을 활용할 때, 사용한다.
8. 기타 실무 적용 처리 프로그램
	1) 스프링에 ajax로 처리하는 jquery lib
		- fullcalendar api
	2) 스프링에서 자동 메일 발송 처리
	3) 웹소켓을 통한 실시간 채팅
		웹소켓없을 때
			client1======> (server)  =====> 저장된 내용을 호출
							 저장     <=====  client2 (Interval)
		웹소켓 있을 때(push)
			client1======> (server)  =====> 
							 소켓서버  ======>   client2 
							           능동적전달
	4) 파일업로드/다운로드 처리
	5) 게시판(답변형 페이지처리) ## 
		첨부파일, 페이징처리, 무한레벨답글처리, session(작성자만 수정/삭제)
	6) 다국어 처리..
	=====================
	7) JPA
	
# 스프링 시작해보기..
1. 웹처리 프로세스
	1) url을 브라우저에 입력.
		http://122.242.68.24:7080/springweb/start.do
	2) 입력된 ip, 포트를 찾아 웹서버로 로딩된 곳으로 간다.(네트워크를 타고)
	3) 웹서버를 찾아가면.
		web.xml 접근하고, 설정된 내용을 처리
		시작파일
		-  ###.do 패턴에 맞는 프레임워크를 설정해놓으면
			그 프레임워크를 호출 하여 찾아간다.	
		- front controller(스프링프레임워크-DispatcherServlet.java)를 호출하고, 
			여기서 지정한 컨테이너설정 파일을 호출
	4) 스프링컨테이너 파일(dispatcher-servlet.xml)#
		- 사용하게 될 모든 객체들의 클래스를 선언.
			controller,service,dao
		- view단 호출 방식
		- 추가할 framework의 클래스와 속성
		- 호출하는 것은 url 패턴에 의해서 controller가 호출 된다.
			@@.do 이름으로 찾아서 controller호출하여 처리가 된다.
	5) 사용자 정의 controller(선언한 클래스 형태의 자바 코드)
		- 메서드 마다 url 패턴으로 호출이 가능하게 처리
		- 해당 메서드에서는 
			요청값 처리
			모델데이터 처리
			뷰단 호출 처리.(jsp)
	6) 보안이 적용된 jsp(주의- 바로 호출이 안된다) controller를 통해서만 호출가능
		- src\main\webapp\WEB-INF 					
		- controller에서 마지막 뷰단 호출 폴드와 파일로 호출되어 출력이 된다.

# 스프링 프로그램 시작 start.do로
1. web.xml 설정
	url패턴이 *.do일때, front 컨트롤러를 타고,
	front controller와 매핑되어 있는 controller xml 호출되도록 처리
	url에 입력된 내용이 한글 요청값이 자동 처리되게 설정..
2. controller 자바파일 선언@Controller로 컨테이너에서 생성할 파일 선언	
3. dispatcher-servlet.xml 컨테이너 설정 xml 파일
	사용하게될 controller 파일 등록			
4. controller에 url패턴 설정과 메서드정의
	/start.do로 시작할 때, 호출할 view 선언
5. WEB-INF 밑 views 폴드 및에 start.do에의해 호출할 view단 jsp호출..

# 스프링 MVC 단계별 연습 내용
1. 기본 스프링 화면 호출
	1) 클래스만들기, @Controller 선언
	2) 컨테이너에 bean으로 등록(dispatcher-servlet.xml)
	3) 해당 컨트롤러의 url 기능 메서드 등록
		1) url 패턴 선언
		2) 기능 메서드 선언
		3) view단 url할당
	4) view단 선언(화면단 호출 jsp선언) webapp/WEB-INF/views/a01_start.jsp 
2. 요청값 처리
	1) 단일 요청값
		- 기본 : ?name=홍길동
		@RequestParam("name") String name
		- 요청값이 없을 때, 처리 ?age=25,   age=
		@RequestParam(value="age",defaultValue="0") int age)
	2) 다중 요청값 처리
		@RequestParam("name") String name,
		@RequestParam("age") int age,
		@RequestParam("loc") String loc
	3) 객체형 요청값 처리(usebean의 처리와 동일하게 처리된다)
		요청값 + 모델 데이터
3. 모델 데이터 처리
	1) view단에 넘김 핵심 데이터에 대한 처리.
		public String start([요청값 처리영역], Model d){
			d.addAttribute("모델명",모델데이터(객체포함));
			return ""
		}		

4. 뷰단 호출 처리
	1) 마지막 return "뷰단"은 request,response값이 다 넘어 가는 forward
		방식의 값이다. 그래서, 모델데이터를 처리할 수 있다.
	2) forward방식이 아닐 경우 
		return "redirect://@@@@"로 선언하면 된다.
			
		









	
								           
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		
				