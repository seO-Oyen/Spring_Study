# 데이터베이스 설계
1. 데이터베이스의 생명주기
	- 데이터베이스의 생성과 운영에 관련된 특징
	1) 요구사항 수집과 분석
	2) 설계 : DB 설계(개념적설계, 논리적설계, 물리적설계)
	3) 구현 : 테이블 생성을 데이터 입력
	4) 운영 : sql을 통해서 데이터를 처리
	5) 감시 및 개선 : 로딩 속도 확인, sql을 통해 보다 효율적으로 처리방법 마련
	위 1)...5) 내용을 순차에 의해 반복하면서 보다 해당 DB 시스템은 최적화된
	환경을 만들어 간다.
2. 생명주기의 구체적인 내용
	1) 요구사항 수집 및 분석
		사용자들의 요구사항을 듣고 분석하여 데이터베이스 구축의 범위를 정하는 단계
	2) 설계
		분석된 요구사항을 기초로 주요 개념과 업무 프로세스 등을 식별하고(개념적 설계),
		사용하는DBMS의 종류에 맞게 변환(논리적 설계)
		향후, 데이터베이스 스키마를 도출(물리적 설계)한다.
	3) 구현
		설계 단계에서 생성된 스키마를 실제 dbms에 적용하여 테이블 및 관련 객체(뷰,인덱)
		를 만들다
	4) 운영
		구현된 데이터베이스를 기반으로 소프트웨어를 구축하여 서비스를 제공한다.
	5) 감시 및 개선
		데이터베이스 운영에 따른 시스템의 문제를 관찰하고 데이터베이스 자체의 문제점을
		파악하여 개선한다.
3. 설계의 3단계
	1) 개념적 모델링
		중요 개념을 구분
		핵심 Entity(독립개체)도출, (엔티티, 엔티티타입, 속성)
		ERD 작성
	2) 논리적 모델링
		각 개념을 구체화
		ERD-RDB 모델 사상(각 엔티타와의 관계 설정, 관계형 엔티티 도출)
		ex) 교수, 학생, (수강)
		상세 속성 정의
		정규화 등(관계형 엔티티에서 실제 테이블 내용 도출을 통해,
			데이터의 무결성 확보를 위해 테이블 분리 단계)
	3) 물리적 모델링
		데이터베이스 생성 계획에 따라 개체, 인덱스 등을 생성
		DB 객체 정의
		테이블 및 인덱스 등 설계
# ER 모델
1. 세상의 사물을 개체(entity)와 개체 간의 관계(relationship)으로 표현한다.
2. 개체(entity)
	독립적인 의미를 지니고 있는 유무형의 사람 또는 사물
	개체의 특성을 나타내는 속성(attribute)에 의해 식별
	개체끼리는 서로 관계를 가짐
	개체(실제 데이터) ==> 속성 ==>
		객체타입(개체와 속성) ==> 테이블
		속성 ==> 컬럼 
	여러 개체들과 연관관계 ==> 테이블의 연관관계 (RDS 구조 설정)
	ex)	사람(개체)    사람(개체)
		남편(역할)		부인(역할)
				결혼(관계)
3. ER다이어그램 : ER모델을 개체와 개체 간의 관계를 표준화된 그램을 나타내는 것을
	말한다. 
	1) 개체/관계
		직원(개체)  	작업(관계)		프로젝트(개체)
	2) 속성
		직원의 속성 : 직원번호 이름 직위 전화번호
		프로젝트의 속성 : 과제번호 예제
		작업의 속성 : 직원번호, 과제번호, 수행시작, 종료시간, 현재진행상태
# 관계 타입 모델링
1. 관계 : 개체 사이의 연관성을 나타내는 개념
2. 관계 타입
	1) 개체 타입과 개체 타입 간의 연결 가능한 관계를 정의하는 것을 말한다.
	2) 관계 집합은 관계로 연결된 집합을 의미한다.
	ex) 
		도서(엔티티타입)	주문(관계타입)	고객(엔티티타입)
		학생(엔티티타입)	소속(관계타입)	학과(엔티티타입)
		학생(엔티티타입)	수강(관계타입)	강좌(엔티티타입)
3. 차수의 유형
	관계 집합에 참가하는 개체 타입의 수를 관계 타입의 차수라고 한다.
	1) 1진관계 한개의 개체가 자기 자신과 관계를 맺은
		EX) 사원정보(EMP) 에서 사원번호, 관리자번호
	2) 2진관계 두개의 개체가 관계를 맺음
		EX) 사원정보(EMP)에서 부서번호와 부서정보(DEPTNO)에서 부서번호와 관계
	3) 3진관계 : 세 개의 객체가 관계를 맺음
		EX) 도서	대출 사용자
			물품 구매	구매자
# 2진 관계 이상의 객체 관계 처리
1. 객체 타입간에 도출되는 관계 타입을 도출할 때, 사용된다.
2. 관계 구조도예시
	학생(엔티티타입) ==> 소속(관계타입) <== 학과(엔티티타입)
	학생은 학과에 소속되고, 하나의 학과에는 여러 학생들을 포함하고 있다.
	학생이라는 기본 엔티티타입과 학과라는 엔티티타입 사이에 관계 타입이 필요로 하는
	것을 말한다.
3. 관계 타입에 따른 대응 수
	두 개체 타입의 관계에 실제로 참여하는 개별 개체 수
	- 실제만들어진 테이블로 이해한다면 하나의 컬럼에 매핑되는 여러 개의 행단위 데이터를
		말한다.
	EX) 부서정보테이블에 부서번호 하나에 사원정보테이블의 여러 사원 정보가 매핑되는
		것을 말한다.
	1) 유형
		1:1 - 하나의 개체가 하나의 개체에 대응
			EX) 사원과 컴퓨터는 사용이라는 관계타입으로 1:1
		1:다 - 하나의 개체가 여러 개체에 대응
				EX) 학과의 학생은 소속이라는 관계타입에 1:다
		다:1 - 여러 개체가 하나의 개체에 대응
		다:다 - 여러 객체가 여러 개체에 대응
			EX) 학생과 강좌라는 관계는 다:다 관계인데, 중간에
				수강이라는 관계타입으로 1:다, 다:1로 처리 한다.
	EX)온라인 서점 
	   도서(도서아이디, 제목, 저장, 출판사, 재고, 단가)
	   
	   구매(구매아이디, 도서아이디, 고객아이디, 구매날짜, 구매수량)
	   
	   고객(고객아이디, 이름, 이메일, 주소)			
	   
	   배송(배송아이디, 구매아이디, 배송시간, 예상도착날짜, 실제도착날짜, 배송상태)
	   	
					 
	
	
	
		
	
	
	
	
	
	
	
			
		
		
		
		
		
		
		
		
		
		 









		