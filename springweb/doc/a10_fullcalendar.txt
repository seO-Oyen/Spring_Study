# fullcalendar를 통한 스프링에서 jquery 라이브러리 ajax 연동 처리
1. fullcalendar는 jquery 기반의 강력한 캘린더 인터페이스 라이브러리로, 
	웹 애플리케이션의 풍부한 캘린더 기능을 쉽게 추가할 수 있게 해줍니다.
	json 데이터 형식을 사용해 벡엔드와 프런트엔드 간 효율적인 데이터 교환을 가능하게 하면, 
	이벤트관리 (등록, 수정, 삭제)등의 기능을 제공합니다.
2. 스프링 프레임워크를 사용하여 fullcalendar 연동하는 웹 애플리케이션
	개발과정은 아래와 같습니다.
	1) 개발환경 구성
	- 기본 소스 호가인 : fullcalendar 기본 소스 코드와 api 문서를 확인
	- 필요한 css, js, html 파일 선언 : 필요한 css와 javascript 파일ㅇ르 프로젝트에 포함시킵니다. (a00_com 공통폴드)
	- jsp를 통한 기본 화면 호출처리 : 초기 화면 controller와 화면호출
		view(jsp)를 통해 fullcalendar를 표시할 jsp를 준비합니다.
	2) backend처리(DB처리)
	- DB 테이블 구정 : fullcalendar에 필요한 이벤트 데이터를 저장한 테이블을 생성합니다.
		필드 : id, title, start, end, backgroundcolor, textcolor,
			allday, url, writer, content
	- 주요 sql작성 : 이벤트의 리스트, 등록, 수정, 삭제에 필요한 sql을 작성합니다.
	- vo/dto클래스 선언 : 데이터 전송 객체 및 리스트를ㄹ 위하여 선언하여, 데이터베이스와의 통신에 사용합니다.
	- dao/mapper 선언 : 데이터 접근 객체(dao), mybatis mapper를 정의하여 데이터베이스 연동을 처리합니다.
	3) frontend처리 (화면-jsp/js)
	- 기본 api를 기준으로 json데이터 로딩 메서드 구현 : fullcalendar에 필요한 이벤트 데이터를 json형식으로 로드합니다.
	- 각 기능별 이벤트 처리 함수 구현 : 이벤트 추가, 수정, 삭제 등의 사용자 인터렉션을 처리하는 함수를 작성합니다.
	- ajax를 통한 비동기 데이터 처리 : 사용자 액션에 따라 서버에 데이터를 요청하고 응답을 처리합니다.
	4) 추가 고려 사항
	- 보안 및 유효성 검증 : 사용자 입력 데이터에 대한 검증 및 필터링을 수행하여 보안을 강화합니다.
	- 응답성과 사용자 경험 : ui/ux 디자인을 고려하여 사용자에게 직관적이고 쉽게 사용할 수 있는 인터페이스를 제공합니다.
	- 테이스 및 디버깅 : 기능별 및 통합 테스트를 통해 애플리케이션이 안정성을 검정합니다.
	
# 스프링에서 처리하는 ajax
1. 스프링에서는 view를 json으로 처리하여 객체를 json 데이터로 처리하게 해준다.
	요청값 ==> 모델데이터 설정 ==> json view
	화면단(객체 ==> json으로 출력)
2. 단계별 처리 내용 확인하자
	1) 기본값 처리 (모델데이터)
	2) 요청값 + 모델데이터 처리
	3) DB연동 + 요청값 + 모델 데이터(json)
	4) 실무 화면에서 ajax 처리
	