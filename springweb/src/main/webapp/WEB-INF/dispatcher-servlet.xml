<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:task="http://www.springframework.org/schema/task" 
   xmlns:aop="http://www.springframework.org/schema/aop" 
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:util="http://www.springframework.org/schema/util"
   xmlns:websocket="http://www.springframework.org/schema/websocket"
   xmlns:sec="http://www.springframework.org/schema/security"
   xmlns:tx="http://www.springframework.org/schema/tx" 
    
   xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd       
        http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc.xsd     
        http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
         http://www.springframework.org/schema/websocket
      http://www.springframework.org/schema/websocket/spring-websocket.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd   
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd   
      ">
      <!-- 상단은 앞으로 xml 태그의 형식을 지정하는 부분
      호출할 때, 컨테이너에서 찾을 수 있는 객체의 범위안에 설정이 됨..
      <bean class="springweb.a01_start.A01_StartController"/>
      <bean class="springweb.a01_start.A02_RestartController"/>
      <bean class="springweb.a01_start.A03_ParamObjectModel"/>
      <bean class="springweb.z01_homework.A1218"/>
      <bean class="springweb.z01_homework.A1219"/>
      <bean class="springweb.a02_mvc.A01_MVC_StartController"/>
      <bean class="springweb.a02_mvc.A02_MVC_CheckAdultCtrl"/>
       -->
      
      <context:component-scan base-package="springweb">
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
         <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
      </context:component-scan>
      <bean class="d01_dao.PreparedStmtDao"/>
      <!-- 
      1. mybatis 접속을 효율적으로 하게 하는 dbcp 객체 설정 처리..
         1) db연동
         2) 트랜잭션 처리
         oracle.jdbc.driver.OracleDriver  jdbc:oracle:thin:@localhost:1521:xe  scott  tiger 이거 내 원격쓸꺼면 바꿔야됨;;
       -->
       <context:property-placeholder location="classpath:resource/a01_conf.txt"/>
       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"> <!-- 자원해제하는 메서드 선언 -->
             <property name="driverClassName" value="${db.driver}"/>
             <property name="url" value="${db.host}"/>
             <property name="username" value="${db.user}"/>
             <property name="password" value="${db.pwd}"/>
       </bean>
       
      <tx:annotation-driven proxy-target-class="true"/>
      <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"/>   
      </bean>
      <!-- 
      2. mybatis framework를 컨테이너에서 사용하기..
         1) 공통 mybatis 설정 xml
         2) 객체를 자동생성 하게 하는 dao interface 위치 선언. 
         
      # DB 연동 처리 형식
      1. dataSource(기본 연결 정보 처리 객체)
      
      2. transactionManager(트랜잭션 처리 - optional)
      [트렌젝션? 
      트랜잭션(Transaction 이하 트랜잭션)이란, 데이터베이스의 상태를 변화시키기 해서 수행하는 작업의 단위를 뜻한다.
      간단하게 말해서 아래의 질의어(SQL)를 이용하여 데이터베이스를 접근 하는 것을 의미한다.]
         ref="dataSource" (위 연결 객체 할당)
         
      3. sqlSesscionFactory(mybatis framework 연결 및 공통 설정 파일 지정)
      [SqlSessionFactory는 데이터베이스와의 연결과 SQL의 실행에 대한 모든 것을 가진 가장 중요한 객체다.
       이 객체가 DataSource를 참조하여 MyBatis와 Mysql 서버를 연동시켜준다]
      
         ref="dataSource" (위 연결 객체 할당)
         configLocation::/resource/mybatis.Spring.xml(공통파일)
         == 사용할 vo의 alias명 지정
            사용할 mapper.xml 설정 처리..
            typeAlias alias="emp" type="springweb.z01_vo.Emp"
            mapper source="resource/ExpMapper.xml"
            == XXXMapper.xml
            mapper namespace="springwep.a02_mvc.a03_dao.A01_Dao"
            <select id="" parameterType="" resultType="">
               ==> 활용할 sql
            </select>
            == 연동된 dao 인터페이스
                  
      4. MapperScannerConfigurce : 
         자동 객체생성 interface dao 패키지 범위 설정
         1) basePackage : springweb.a02_mvc.a03_dao
         해당 패키지 안에 있는 모든 Dao interface는 실제 객체를 상속해서 DB연결 처리해준다..
         
         2) 위 내용에서 다른 패키지를 추가하려면 아래 형식으로 처리하면 된다. 
            value="패키지1, 패키지2,..."
            ,로 구분하여 추가 처리...
            
       -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
          <property name="dataSource" ref="dataSource"/>
          <property name="configLocation" value="classpath:/resource/mybatis.Spring.xml"/>
       </bean>
       
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
          <property name="basePackage" value="springweb.a02_mvc.a03_dao"/>
       </bean>
       
       <!-- view 설정 -->
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <property name="order" value="1"/>
   </bean> 
   
   <bean id="btnViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
      <property name="order" value="0"/>
   </bean>
   <bean id="pageJsonReport" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
      <property name="contentType" value="text/html;charset=utf-8"/>
   </bean>
       
       <!-- 파일 업로드뷰 -->
       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
</beans>      